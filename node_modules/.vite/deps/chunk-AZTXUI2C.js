import {
  useButtonProps
} from "./chunk-4CJC5KK6.js";
import {
  require_classnames,
  useBootstrapPrefix
} from "./chunk-Y5APLBVF.js";
import {
  require_jsx_runtime
} from "./chunk-XREXF2BJ.js";
import {
  __toESM,
  require_react
} from "./chunk-QH6HOCAD.js";

// node_modules/react-bootstrap/esm/ToggleButton.js
var import_classnames2 = __toESM(require_classnames());
var React2 = __toESM(require_react());

// node_modules/react-bootstrap/esm/Button.js
var import_classnames = __toESM(require_classnames());
var React = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var Button = React.forwardRef(({
  as,
  bsPrefix,
  variant = "primary",
  size,
  active = false,
  disabled = false,
  className,
  ...props
}, ref) => {
  const prefix = useBootstrapPrefix(bsPrefix, "btn");
  const [buttonProps, {
    tagName
  }] = useButtonProps({
    tagName: as,
    disabled,
    ...props
  });
  const Component = tagName;
  return (0, import_jsx_runtime.jsx)(Component, {
    ...buttonProps,
    ...props,
    ref,
    disabled,
    className: (0, import_classnames.default)(className, prefix, active && "active", variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && "disabled")
  });
});
Button.displayName = "Button";
var Button_default = Button;

// node_modules/react-bootstrap/esm/ToggleButton.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var noop = () => void 0;
var ToggleButton = React2.forwardRef(({
  bsPrefix,
  name,
  className,
  checked,
  type,
  onChange,
  value,
  disabled,
  id,
  inputRef,
  ...props
}, ref) => {
  bsPrefix = useBootstrapPrefix(bsPrefix, "btn-check");
  return (0, import_jsx_runtime4.jsxs)(import_jsx_runtime3.Fragment, {
    children: [(0, import_jsx_runtime2.jsx)("input", {
      className: bsPrefix,
      name,
      type,
      value,
      ref: inputRef,
      autoComplete: "off",
      checked: !!checked,
      disabled: !!disabled,
      onChange: onChange || noop,
      id
    }), (0, import_jsx_runtime2.jsx)(Button_default, {
      ...props,
      ref,
      className: (0, import_classnames2.default)(className, disabled && "disabled"),
      type: void 0,
      role: void 0,
      as: "label",
      htmlFor: id
    })]
  });
});
ToggleButton.displayName = "ToggleButton";
var ToggleButton_default = ToggleButton;

export {
  Button_default,
  ToggleButton_default
};
//# sourceMappingURL=chunk-AZTXUI2C.js.map
